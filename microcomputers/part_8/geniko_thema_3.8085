		IN 10H			; disable memory protection
		LXI B,00D0H		; delay set to 208ms

INITIALIZE_DISPLAY:
		LXI H,0A00H		; initial address of data to be printed: 0A00H
		MVI M,00H		; make all 7-segment displays zero
		INX H
		MVI M,00H
		INX H
		MVI M,00H
		INX H
		MVI M,00H
		INX H
		MVI M,00H
		INX H
		MVI M,00H

INITIALIZE_BLANK:
		INX H			; 0A06H = address of blank data, we use these to simulate blinking
		MVI M,00H		; make all 7-segment displays zero
		INX H
		MVI M,00H
		INX H
		MVI M,00H
		INX H
		MVI M,00H
		INX H
		MVI M,00H
		INX H
		MVI M,00H

INITIALIZE_CLIENT_NUMBER:	
		INX H			; store current client number (0 initially) in address 0A0CH 
		MVI M,00H		

		LXI D,0A00H		; print all zeroes
		CALL STDM
		CALL DCD

MAIN:

;;;;;; CHECK IF A REGISTER IS CALLING A CLIENT ;;;;;

		MVI D,00H		; we initialise at 0 at every loop
		MVI A,F7H		; read next clients (1-3)
		STA 2800H
		LDA 1800H		; A holds "next client calls"
CHECK1:
		RAR			; CY = Is 1 calling?
		JC CHECK2
		LDA 0A0CH		; current client
		INR A			; next client
		CALL MAKE_MOD		; if current client number is 100 we reset at 0
		STA 0A0CH		; store current client
		CALL MAKE_DECIMAL	; display in decimal
		STA 0A04H		; store display for 1 units
		MOV A,D 
		STA 0A05H		; decades
		MVI A,10H
		STA 0A0AH		; it is going to blink because we are calling new client
		STA 0A0BH		; decades too
		JMP DISPLAY
CHECK2:
		RAR
		JC CHECK3
		LDA 0A0CH		; current client
		INR A			; next client
		CALL MAKE_MOD		; if current client number is 100 we reset at 0
		STA 0A0CH		; store current client
		CALL MAKE_DECIMAL	; display in decimal
		STA 0A02H		; store display for 2 units
		MOV A,D
		STA 0A03H		; decades
		MVI A,10H
		STA 0A08H		; it is going to blink because we are calling new client
		STA 0A09H		; decades too
		JMP DISPLAY
CHECK3:
		RAR
		JC CHECK4-6
		LDA 0A0CH		; current client
		INR A			; next client
		CALL MAKE_MOD		; if current client number is 100 we reset at 0
		STA 0A0CH		; store current client
		CALL MAKE_DECIMAL	; display in decimal
		STA 0A00H		; store display for 3 units
		MOV A,D
		STA 0A01H		; decades
		MVI A,10H
		STA 0A06H		; it is going to blink because we are calling new client
		STA 0A07H		; decades too
		JMP DISPLAY

;;;;; CHECK IF A TOLL IS CURRENTLY SERVING A CLIENT ;;;;;

CHECK4-6:
		MVI A,EFH		; read toll status
		STA 2800H
		LDA 1800H		; A holds "whether a toll is serving a client"
		
CHECK4:
		RAR			; CY = Is 1 serving?
		JC CHECK5
		LDA 0A04H		; which client is 1 serving?
		STA 0A0AH		; "disable" blinking
		LDA 0A05H
		STA 0A0BH
		JMP DISPLAY
CHECK5:
		RAR			; CY = Is 2 serving?
		JC CHECK6
		LDA 0A02H		; which client is 2 serving?
		STA 0A08H		; "disable" blinking
		LDA 0A03H
		STA 0A09H
		JMP DISPLAY
CHECK6:
		RAR			; CY = Is 3 serving?
		JC DISPLAY
		LDA 0A00H		; which client is 3 serving?
		STA 0A06H		; "disable" blinking
		LDA 0A01H
		STA 0A07H
		JMP DISPLAY

DISPLAY:
		LXI D,0A00H		; address in which client numbers are stored
		CALL STDM
		CALL DCD
		CALL DELB
		LXI D,0A06H		; address in which blanks or numbers are stored
		CALL STDM
		CALL DCD 
		CALL DELB
		JMP MAIN		; forever

MAKE_DECIMAL:
COUNT:
		CPI 0AH			; if less than 10 return
		JC FINISH_DEC
		SUI 0AH			; else subtract 10
		INR D			; and increase decades (stored in D)
		JMP COUNT
FINISH_DEC:
		RET

MAKE_MOD:
		CPI 64H			; if less than 100 return
		JC FINISH_MOD
		MVI A,00H		; else reset at client number = 0
FINISH_MOD:
		RET
END
